A FOREIGN KEY is a key that is used to mainly, maintain the relation between two tables together with the help of PRIMARY KEY.
A common column is required in both table with same datatype.
A FOREIGN KEY is a field (or collection of fields) in one table that refers to the PRIMARY KEY in another table.
It prevent to delete parent's row's column if those row maintaing foreign key.
The table containing the foreign key is called the child table, and the table containing the candidate key or
foreign key is called the referenced or parent table.

"Persons" table:
-----------------------------------------
PersonID	LastName	 FirstName	Age
1	         Hansen	    Ola	      30
2	         Svendson   Tove	    23
3	         Pettersen	Kari	    20
-----------------------------------------
Note : The "PersonID" column in the "Persons" table is the PRIMARY KEY in the "Persons"s table.

"Orders" table:
-----------------------------------------
OrderID  	OrderNumber	     PersonID
1	        77895	              3
2         44678	              3
3	        22456	              2
4	        24562	              1
-----------------------------------------
Note : The "PersonID" column in the "Orders" table is a FOREIGN KEY in the "Orders" table.

Notice that the "PersonID" column in the "Orders" table points to the "PersonID" column in the "Persons" table.

YOU CAN'T DELETE PARENTS'S TABLE ROW WHICH CONTAIN PRIMARY KEY. FIRST YOU HAVE TO DELETE REFERENCED TABLE'S ROW'S COLUMN WHICH
ID PRIMARY KEY IN PARENT TABLE.

1> To create a table without naming PRIMARY KEY here ID will be PRIMARY KEY : 
     CREATE TABLE Persons (ID int NOT NULL PRIMARY KEY,LastName varchar(255) NOT NULL,FirstName varchar(255),Age int);

2> To create a table WITH naming PRIMARY KEY with multiple columns here ID will be PRIMARY KEY : 
     CREATE TABLE Persons (ID int NOT NULL, LastName varchar(255) NOT NULL,FirstName varchar(255),
     Age int,CONSTRAINT PK_Person PRIMARY KEY (ID,LastName));
     
Note: In the example above there is only ONE PRIMARY KEY (PK_Person). However, the VALUE of the primary key is made up 
      of TWO COLUMNS (ID + LastName).
      
3> The following SQL creates a FOREIGN KEY on the "PersonID" column when the "Orders" table is created:
    CREATE TABLE Orders (OrderID int NOT NULL PRIMARY KEY,OrderNumber int NOT NULL,
    PersonID int FOREIGN KEY REFERENCES Persons(PersonID));
      
4> To allow naming of a FOREIGN KEY constraint, and for defining a FOREIGN KEY constraint on multiple columns, 
   use the following SQL syntax:
    CREATE TABLE Orders (OrderID int NOT NULL,OrderNumber int NOT NULL,PersonID int,PRIMARY KEY (OrderID),
    CONSTRAINT FK_PersonOrder FOREIGN KEY (PersonID)REFERENCES Persons(PersonID);
      
5> To create a FOREIGN KEY constraint on the "PersonID" column when the "Orders" table is already created,
   use the following SQL:
    ALTER TABLE Orders ADD FOREIGN KEY (PersonID) REFERENCES Persons(PersonID);
    
6> To allow naming of a FOREIGN KEY constraint, and for defining a FOREIGN KEY constraint on multiple columns of a 
   table which is already created but not applied any foreign key use the following SQL syntax:
    ALTER TABLE Orders ADD CONSTRAINT FK_PersonOrder FOREIGN KEY (PersonID) REFERENCES Persons(PersonID);
    
7> To drop a FOREIGN KEY constraint from table which is already exist, use the following SQL:
    ALTER TABLE Orders DROP CONSTRAINT FK_PersonOrder;
    
